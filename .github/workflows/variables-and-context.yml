name: Variables and Context
on: 
  push:
    branches:
      dev
  workflow_dispatch: 
    inputs:
      name:
        description: Person to greet
        default: main
        required: true
  
env:
  VAR1: myworkflowvar1
  VAR2: myworkflowvar2
  VAR3: myworkflowvar3

jobs:
  

  job1:
    runs-on: ubuntu-latest
    steps:
      - name: "Step 1: Dump GitHub context"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        # All below 3 variants works fine
        run: echo "GITHUB_CONTEXT"
        # run: echo %GITHUB_CONTEXT%
        # run: echo env.GITHUB_CONTEXT
      - name: "Step 2: Print from GH context obj"
        run: |
          echo "Input name in the wf is: ${{ github.event.inputs.name }}"
          echo "Repo full name is: ${{ github.event.repository.full_name }}"
          echo "Repo branch url is: ${{ github.event.repository.branches_url }}"
          echo "Repo created date is: ${{ github.event.repository.created_at }}"
          echo "Repo name is: ${{ github.event.repository.name }}"
          echo "The reference for this workflow run is: ${{ github.ref }}"
          echo "Printing out GITHUB_REF#refs/heads: ${GITHUB_REF#refs/heads/}"
          echo "Printing out GITHUB_REF#: ${GITHUB_REF#}"
          echo "Printing out GITHUB_REF: ${GITHUB_REF}"
          echo "Just test"
     
  job2:
    runs-on: ubuntu-latest
    outputs:    
      ardi1: ${{steps.step1.outputs.step1value}}
      ardi2: ${{steps.step2.outputs.step2value}}
      ardi3: ${{steps.step3.outputs.ardiVar}}

    steps:
      - name: Step 1
        env:
          VAR1: in job2 step 1
        id: step1
        run: |
          echo "step1value=hello" >> $GITHUB_OUTPUT
          # 2 ways of printing var
          echo $VAR1
          echo ${{env.VAR1}}

      - name: Step 2
        id: step2
        run: |
          echo "step2value=world" >> $GITHUB_OUTPUT
          echo $VAR1
          echo "hello: $VAR1"

      - name: step 3
        id: step3
        run: |
          echo "ardiVar=I'm writing this in job 2 step 3" >> $GITHUB_OUTPUT
  
  job3:
    runs-on: ubuntu-latest
    needs: job2
    env:
      job3var: on job level
    steps:
      - name: print out from job 2
        env:
          job3_Steps_Var: defined within job 3 step
          VAR2: my step var
          job3var: on step level
        run: |
          echo ${{needs.job2.outputs.ardi1}} ${{needs.job2.outputs.ardi2}}
          echo $VAR1
          echo $VAR2
          echo $job3_Steps_Var
          echo $job3var
          echo $job3var
          echo "The reference for this workflow run is: ${{ github.ref }}"
          echo "This is the value defined in a variable from job2 which is: ${{needs.job2.outputs.ardi3}}"
          echo "This is job3 var:" $job3var
